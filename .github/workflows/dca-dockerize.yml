# This workflow builds a new DCA image triggered by tags *or* changes to one of the relevant files on a develop branch.
# IMPORTANT: images built via tags will also be tagged as `latest`, so in an example project-specific fork such as `nf-osi/NF_data_curator`,
# pushing a tag v24.0.0 will create both `ghcr.io/nf-osi/nf_data_curator:v24.0.0` and `ghcr.io/nf-osi/nf_data_curator:latest` referring to the same image.
# This is so that any automated deployments can refer to `latest` image as the latest stable release.
# Images built from a develop branch do not get the latest tag! 
# Use a develop branch to test update the image, e.g. revise Dockerfile to install different Python version or new R packages.

name: Dockerize Data Curator App (DCA)

on:
  push:
    branches:
      - develop*
    tags:
      - v*
    paths:
      - Dockerfile
      - install_pkgs.R
      - global.R
      - server.R
      - ui.R

env:
  # Use ghcr registry instead of DockerHub
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      # Generate image tag, e.g. nf-osi/nf_data_curator:v25.0.0 or nf-osi/nf_data_curator:develop
      # Note: image names must be lower case or there will be error
      - name: Lower case repo org/user name
        run: echo IMAGE_REPO=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV 

      - name: Generate image tag
        id: tag
        run: |
          if [[ $GITHUB_REF_TYPE == tag ]]; then
            echo "::set-output name=tags::${{ env.REGISTRY }}/$IMAGE_REPO:$GITHUB_REF_NAME,${{ env.REGISTRY }}/$IMAGE_REPO:latest"
          else
            echo "::set-output name=tags::${{ env.REGISTRY }}/$IMAGE_REPO:develop"
          fi
        
        
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.tag.outputs.tags }}
          platforms: linux/amd64
